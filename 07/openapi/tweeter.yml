openapi: 3.0.0
info:
  title: Tweeter API
  version: '1.0'
  description: TweeterのAPIです。
  license:
    name: Apache 2.0
servers:
- url: 'http://localhost:8080'
paths:
  '/tweeters/{username}/tweets':
    parameters:
    - schema:
        type: string
      name: username
      in: path
      required: true
      description: ユーザー名
    get:
      summary: 指定ユーザーのつぶやき取得
      tags:
      - Tweet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TweetResponse'
              examples:
                Sample:
                  value:
                  - uuid: 52b6e221-77f9-4e1f-bdf7-2dcf09c44b81
                    text: Hello3
                    username: demo
                    createdAt: '2020-05-07T13:39:57.366Z'
                  - uuid: 5b74be91-5c13-4b0e-908d-f3fa9aa70b26
                    text: Hello2
                    username: demo
                    createdAt: '2020-05-07T13:37:57.366Z'
                  - uuid: 127f679c-b4e3-450b-bb3f-b5b7f32fc6a0
                    text: Hello1
                    username: demo
                    createdAt: '2020-05-07T13:36:57.366Z'
      operationId: get-tweeters-username-tweets
      description: 指定したユーザーのつぶやきを取得します。
  '/tweeters/{username}/followers':
    parameters:
    - schema:
        type: string
      name: username
      in: path
      required: true
      description: ユーザー名
    get:
      summary: 指定ユーザーのフォロワー取得
      tags:
      - Following
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FollowingResponse'
              examples:
                Sample:
                  value:
                  - username: foo3
                  - username: foo4
      operationId: get-tweeters-username-followers
      description: 指定したユーザーをフォローしているユーザーを取得します。
  '/tweeters/{username}/followings':
    get:
      summary: 指定ユーザーのフォローイング取得
      tags:
      - Following
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FollowingResponse'
              examples:
                Sample:
                  value:
                  - username: foo2
                  - username: foo3
      operationId: get-tweeters-username-followings
      description: 指定したユーザーがフォローしているユーザー一覧を取得します。
    parameters:
    - schema:
        type: string
      name: username
      in: path
      required: true
      description: ユーザー名
  '/tweets/{uuid}':
    get:
      summary: 指定つぶやき一件取得
      tags:
      - Tweet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
              examples:
                Sample:
                  value:
                    uuid: 2bf80fec-ea55-4d05-b3ea-392bcec7483e
                    text: 'Hi!'
                    username: foo
                    createdAt: '2020-05-07T13:38:57.366Z'
      operationId: get-tweets-uuid
      description: 指定したUUIDのつぶやきを取得します。
    parameters:
    - schema:
        type: string
      name: uuid
      in: path
      required: true
      description: UUID
    delete:
      summary: 指定つぶやき一件削除
      operationId: delete-tweets-uuid
      responses:
        '204':
          description: No Content
      description: 指定したUUIDのつぶやきを削除します。
      tags:
      - Tweet
  /tweets:
    post:
      summary: 自分のつぶやき作成
      operationId: post-tweets
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: 作成されたつぶやきのURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
              examples:
                Sample:
                  value:
                    text: Hello
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequest'
            examples:
              Sample:
                value:
                  text: Hello
        description: つぶやき情報
      description: 自分のつぶやきを作成します。
      tags:
      - Tweet
      parameters: []
    get:
      summary: 自分とフォロワーのつぶやき一覧
      operationId: get-tweets
      description: 自分とフォローしているユーザーのつぶやき一覧を取得します。
      tags:
      - Tweet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TweetResponse'
              examples:
                Sample:
                  value:
                  - uuid: 52b6e221-77f9-4e1f-bdf7-2dcf09c44b81
                    text: Hello3
                    username: demo
                    createdAt: '2020-05-07T13:39:57.366Z'
                  - uuid: 2bf80fec-ea55-4d05-b3ea-392bcec7483e
                    text: 'Hi!'
                    username: foo
                    createdAt: '2020-05-07T13:38:57.366Z'
                  - uuid: 5b74be91-5c13-4b0e-908d-f3fa9aa70b26
                    text: Hello2
                    username: demo
                    createdAt: '2020-05-07T13:37:57.366Z'
                  - uuid: 127f679c-b4e3-450b-bb3f-b5b7f32fc6a0
                    text: Hello1
                    username: demo
                    createdAt: '2020-05-07T13:36:57.366Z'
      parameters: []
  /followings:
    get:
      summary: 自分がフォローしているユーザー一覧取得
      tags:
      - Following
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowingResponse'
              examples:
                Sample:
                  value:
                  - username: demo1
                  - username: demo2
      operationId: get-followings
      description: 自分がフォローしているユーザー一覧を取得します。
    post:
      summary: ユーザーのフォロー
      operationId: post-followings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowingResponse'
              examples:
                Sample:
                  value:
                    username: foo
      description: ユーザーをフォローします。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowingRequest'
            examples:
              Sample:
                value:
                  username: foo
        description: フォローするユーザー情報
      tags:
      - Following
  /tweeters:
    post:
      summary: ユーザー作成
      operationId: post-tweeters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweeterResponse'
              examples:
                Sample:
                  value:
                    username: demo
      description: ユーザーを作成します。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweeterRequest'
            examples:
              Sample:
                value:
                  username: demo
                  email: demo@example.com
                  password: secret
        description: ユーザー情報
      tags:
      - Tweeter
components:
  schemas:
    TweetResponse:
      title: TweetResponse
      type: object
      x-examples:
        Sample:
          uuid: d188c790-8c28-4507-b8cd-e422d6073a93
          text: 'Hello World!'
          username: making
          createdAt: '2020-05-06T05:38:55.297765Z'
      description: つぶやき(レスポンス)
      properties:
        uuid:
          type: string
          description: UUID
          format: uuid
        text:
          type: string
          description: |
            つぶやきテキスト
        username:
          type: string
          description: ユーザー名
        createdAt:
          type: string
          description: 作成時刻
          format: date-time
      required:
      - uuid
      - text
      - username
      - createdAt
      x-tags:
      - Tweet
    TweeterResponse:
      title: TweeterResponse
      type: object
      x-examples:
        Sample:
          username: making
      description: ユーザー(レスポンス)
      properties:
        username:
          type: string
          description: ユーザー名
      required:
      - username
      x-tags:
      - Tweeter
    TweeterRequest:
      title: TweeterRequest
      type: object
      x-examples:
        Sample:
          username: making
          email: making@example.com
          password: secret
      description: ユーザー(リクエスト)
      properties:
        username:
          type: string
          description: ユーザー名
          minLength: 3
          maxLength: 36
          pattern: '[a-zA-Z0-9]'
        email:
          type: string
          description: メールアドレス
          format: email
          minLength: 5
          maxLength: 128
        password:
          type: string
          description: パスワード
          format: password
          minLength: 8
      required:
      - username
      - email
      - password
      x-tags:
      - Tweeter
    TweetRequest:
      title: TweetRequest
      type: object
      description: つぶやき(リクエスト)
      x-examples:
        Example:
          text: 'Hello World!'
      properties:
        text:
          type: string
          description: |
            つぶやきテキスト
          minLength: 1
          maxLength: 128
      required:
      - text
      x-tags:
      - Tweet
    FollowingResponse:
      title: Following
      type: object
      description: フォロー情報(レスポンス)
      properties:
        username:
          type: string
      required:
      - username
      x-examples:
        Sample:
          username: demo
      x-tags:
      - Following
    FollowingRequest:
      title: FollowingRequest
      type: object
      description: フォロー情報(リクエスト)
      properties:
        username:
          type: string
      required:
      - username
      x-examples:
        Sample:
          username: demo
      x-tags:
      - Following
